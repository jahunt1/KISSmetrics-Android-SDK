buildscript {
  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:4.0.1"
  }

  version '2.3.1'
  group 'com.kissmetrics.sdk'
}

apply plugin: 'com.android.library'

allprojects {
  repositories {
    google()
    jcenter()
  }
}

android {
  compileSdkVersion 26

  defaultConfig {
    minSdkVersion 8
    targetSdkVersion 26
    versionCode 5
    versionName project.version
  }

  buildTypes {
    release {
      minifyEnabled false
    }
    debug {
      debuggable true
    }
  }

  defaultConfig {
    testInstrumentationRunner "android.test.InstrumentationTestRunner"
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }
}

dependencies {
  androidTestImplementation group: 'com.android.support.test', name: 'testing-support-lib', version: '0.1'
  testImplementation 'junit:junit:4.12'
}

// Take from
// http://stackoverflow.com/questions/19307341/android-library-gradle-release-jar/19484146#19484146
android.libraryVariants.all { variant ->
  def name = variant.buildType.name

  if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
    return; // Skip debug builds.
  }

  def task = project.tasks.create "jar${name.capitalize()}", Jar
  task.dependsOn variant.javaCompile
  task.from variant.javaCompile.destinationDir
  artifacts.add('archives', task)
}

// This magic came from:
// http://stackoverflow.com/questions/23297562/gradle-javadoc-and-android-documentation
task javadocs(type: Javadoc) {
  android.libraryVariants.all { variant ->
    title = "KISSmetrics Android API ${android.defaultConfig.versionName}"
    source = android.sourceSets.main.java.srcDirs
    classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
//    options {
//      links "http://docs.oracle.com/javase/7/docs/api/"
//      linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
//    }

    exclude '**/BuildConfig.java'
    exclude '**/R.java'
  }
}

task sourcesJar(type: Jar) {
  classifier 'sources'
  from android.sourceSets.main.java.srcDirs
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
  classifier 'javadoc'
  from "${project.buildDir}/docs/javadoc"
}